import std/httpclient
import std/json
import std/base64
# import typetraits

var clientID = parseJson(readfile("clientID"))["web"]
var key = clientID["client_id"].getStr() & ":" & clientID[
        "client_secret"].getStr()
key = encode(key)
var DOCID = "1v89oJWkHAy4ujpg-vdtnSAuJ_e_pyIy1pLb-G3PFPiY"



# Get ACCESS_TOKEN using refresh token
let authClient = newHttpClient()
authClient.headers = newHttpHeaders({"Content-Type": "application/x-www-form-urlencoded",
        "Authorization": "Basic " & key})
var ACCESS_TOKEN = ""
try:
    var res = authClient.postContent("https://oauth2.googleapis.com/token?access_type=offline&prompt=consent",
            body = "grant_type=refresh_token&refresh_token=" & clientID[
            "refresh_token"].getStr())
    var resJson = parseJson(res)
    ACCESS_TOKEN = resJson["access_token"].getStr()

finally:
    authClient.close()


# get document
let client = newHttpClient()
client.headers = newHttpHeaders({"Authorization": "Bearer " & ACCESS_TOKEN, "Accept":"application/json"})
var resDoc2: JsonNode
try:
    var resDoc = client.getContent("https://docs.googleapis.com/v1/documents/" & DOCID & "?key=" & clientID["api_key"].getStr())
    resDoc2 = parseJson(resDoc)
finally:
    client.close()
echo resDoc2
# for i in 1..high(content):

    







# API token

# client credential grant type
# curl -H "Content-Type: application/x-www-form-urlencoded" \
#   -H "Authorization: Basic c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ" \
#   -X POST "https://apitest.acme.com/oauth/token" \
#   -d "grant_type=client_credentials"





# doc manipulation

# curl --request POST \
#   'https://docs.googleapis.com/v1/documents?key=[YOUR_API_KEY]' \
#   --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
#   --header 'Accept: application/json' \
#   --header 'Content-Type: application/json' \
#   --data '{"title":"nice"}' \
#   --compressed


# curl \
#   'https://docs.googleapis.com/v1/documents/[DOCUMENTID]?key=[YOUR_API_KEY]' \
#   --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
#   --header 'Accept: application/json' \
#   --compressed
